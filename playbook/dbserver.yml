---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning
    pre_tasks:
     - include_vars: ec2-vars/{{type}}.yml

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action: 
          module: ec2_group
          vpc_id: "{{ vpc }}"
          name: "{{ ec2_security_group }}"
          description: Security Group for dbserver Servers
          region: "{{ ec2_region }}"
          rules:
            - proto: tcp
              from_port: 0
              to_port: 65535
              cidr_ip: 172.30.0.0/16
        register: db_firewall

      - name: Provision EC2 Box
        local_action:
          module: ec2
          key_name: "{{ ec2_keypair }}"
          group: "{{ ec2_security_group }}"
          instance_type: "{{ ec2_instance_type }}"
          image: "{{ ec2_image }}"
          vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
          region: "{{ ec2_region }}"
          instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
          assign_public_ip: yes
          wait: true
          count: "{{ ec2_count }}"
          volumes:
          - device_name: /dev/sda1
            device_type: "{{ ebs_volume_type }}"
            volume_size: "{{ ec2_volume_size }}"
            delete_on_termination: true
        register: ec2

      - name: Add the newly created EC2 instance(s) to the dbserver host group inside the host file.
        local_action: lineinfile 
                      dest="../hosts" 
                      regexp={{ item.private_ip }} 
                      insertafter="\[dbservers\]" line={{ item.private_ip }}
        with_items: "{{ec2.instances}}"

      - name: Add new instance to proper ansible group
        add_host: hostname={{ec2_tag_Name}} groupname=dbservers ansible_ssh_host={{ item.private_ip }} ansible_ssh_user=ubuntu
        with_items: "{{ec2.instances}}"


      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.private_ip }} 
                      port=22 
                      delay=60
                      timeout=320
                      state=started
        with_items: "{{ec2.instances}}"

  - name: Configure mysql instance on this server
    hosts: dbservers
    sudo: True
    sudo_user: root
    remote_user: ubuntu
    gather_facts: True
    roles:
      - {role: 'mysql', tags: 'mysql'}



